name: Fast Compile kmod-rkp-ipid

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  compile-kmod-rkp-ipid:
    runs-on: ubuntu-22.04
    timeout-minutes: 120  # 整体工作流超时时间

    steps:
    - name: Checkout ImmortalWrt
      uses: actions/checkout@v4
      with:
        repository: immortalwrt/immortalwrt
        ref: master
        fetch-depth: 1

    - name: Checkout kmod-rkp-ipid
      run: git clone --depth 1 https://github.com/IOEKKO/rkp-ipid.git package/kmod-rkp-ipid

    - name: Install Dependencies
      run: |
        sudo apt update -y
        sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget python3-pip libdeflate-tools ccache
        python3 -m pip install meson>=0.64 ninja

    - name: Setup Environment
      run: |
        mkdir -p staging_dir/host/bin
        ln -sf $(which meson) staging_dir/host/bin/meson 2>/dev/null || true
        ln -sf $(which ninja) staging_dir/host/bin/ninja 2>/dev/null || true
        ln -sf $(which python3) staging_dir/host/bin/python3 2>/dev/null || true

    - name: Create Minimal Config
      run: |
        echo "CONFIG_TARGET_mediatek=y" > .config
        echo "CONFIG_TARGET_mediatek_filogic=y" >> .config
        echo "CONFIG_TARGET_mediatek_filogic_DEVICE_generic=y" >> .config
        echo "CONFIG_TARGET_ARCH=aarch64" >> .config
        echo "CONFIG_TARGET_SUBTARGET=filogic" >> .config
        echo "CONFIG_TARGET_ARCH_PACKAGES=aarch64_cortex-a53" >> .config
        echo "CONFIG_PACKAGE_kmod-rkp-ipid=y" >> .config
        echo "CONFIG_PACKAGE_libopenssl=y" >> .config
        echo "CONFIG_CCACHE=y" >> .config

    - name: Build Essential Tools Only
      timeout-minutes: 45
      run: |
        make defconfig
        # 只编译必要的工具，跳过完整工具链
        make -j$(nproc) tools/install V=sc
        make -j$(nproc) toolchain/install V=sc

    - name: Update Feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Finalize Config
      run: |
        echo "CONFIG_PACKAGE_kmod-rkp-ipid=y" >> .config
        make defconfig

    - name: Download Prebuilt Kernel
      run: |
        # 尝试下载预编译的内核，避免长时间编译内核
        make -j$(nproc) target/linux/compile V=s || echo "继续编译内核..."

    - name: Compile kmod-rkp-ipid Only
      timeout-minutes: 30
      run: |
        # 直接编译 kmod 包，依赖项会自动处理
        make package/kmod-rkp-ipid/compile -j$(nproc) V=s

    - name: Find and Prepare IPK
      run: |
        # 搜索 IPK 文件
        find ./bin -name "*.ipk" | grep -i rkp-ipid || true
        IPK_FILE=$(find ./bin -name "*kmod-rkp-ipid*.ipk" -type f | head -1)
        if [ -z "$IPK_FILE" ]; then
          # 如果没找到，尝试更广泛的搜索
          IPK_FILE=$(find ./bin -name "*.ipk" -type f | head -1)
        fi
        if [ -n "$IPK_FILE" ]; then
          echo "Found IPK: $IPK_FILE"
          cp "$IPK_FILE" ./kmod-rkp-ipid.ipk
          ls -lh kmod-rkp-ipid.ipk
          echo "SUCCESS: IPK file prepared"
        else
          echo "ERROR: No IPK file found"
          echo "Available IPK files:"
          find ./bin -name "*.ipk" -type f | head -10
          exit 1
        fi

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: kmod-rkp-ipid-package
        path: ./kmod-rkp-ipid.ipk
        retention-days: 30
